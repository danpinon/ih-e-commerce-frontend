[{"C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\index.js":"1","C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\store.js":"2","C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\App.js":"3","C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\reducers\\productReducers.js":"4","C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\components\\layout\\Footer.js":"5","C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\components\\Home.js":"6","C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\components\\product\\ProductDetails.js":"7","C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\components\\layout\\Header.js":"8","C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\components\\layout\\MetaData.js":"9","C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\components\\layout\\Loader.js":"10","C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\components\\product\\Product.js":"11","C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\components\\layout\\Search.js":"12","C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\constants\\productConstants.js":"13","C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\actions\\productActions.js":"14","C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\reducers\\userReducers.js":"15","C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\constants\\userConstants.js":"16","C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\components\\user\\Login.js":"17","C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\actions\\userActions.js":"18","C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\components\\user\\Register.js":"19","C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\components\\user\\Profile.js":"20","C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\components\\route\\ProtectedRoute.js":"21","C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\components\\user\\UpdateProfile.js":"22","C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\components\\user\\UpdatePassword.js":"23"},{"size":588,"mtime":1623163082149,"results":"24","hashOfConfig":"25"},{"size":669,"mtime":1623282532134,"results":"26","hashOfConfig":"25"},{"size":1552,"mtime":1623336430850,"results":"27","hashOfConfig":"25"},{"size":1911,"mtime":1623195176901,"results":"28","hashOfConfig":"25"},{"size":357,"mtime":1623210141166,"results":"29","hashOfConfig":"25"},{"size":6131,"mtime":1623198340622,"results":"30","hashOfConfig":"25"},{"size":5332,"mtime":1623209586448,"results":"31","hashOfConfig":"25"},{"size":3536,"mtime":1623281618550,"results":"32","hashOfConfig":"25"},{"size":241,"mtime":1623105378961,"results":"33","hashOfConfig":"25"},{"size":166,"mtime":1623161901222,"results":"34","hashOfConfig":"25"},{"size":1330,"mtime":1623210047198,"results":"35","hashOfConfig":"25"},{"size":1100,"mtime":1623184913074,"results":"36","hashOfConfig":"25"},{"size":412,"mtime":1623164711667,"results":"37","hashOfConfig":"25"},{"size":1659,"mtime":1623197700030,"results":"38","hashOfConfig":"25"},{"size":2996,"mtime":1623333174736,"results":"39","hashOfConfig":"25"},{"size":1114,"mtime":1623332892635,"results":"40","hashOfConfig":"25"},{"size":3470,"mtime":1623272123322,"results":"41","hashOfConfig":"25"},{"size":3939,"mtime":1623333817150,"results":"42","hashOfConfig":"25"},{"size":5796,"mtime":1623263899611,"results":"43","hashOfConfig":"25"},{"size":1850,"mtime":1623274671813,"results":"44","hashOfConfig":"25"},{"size":714,"mtime":1623280498926,"results":"45","hashOfConfig":"25"},{"size":5273,"mtime":1623285749478,"results":"46","hashOfConfig":"25"},{"size":3044,"mtime":1623336823665,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"w1prl0",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\index.js",[],["100","101"],"C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\store.js",[],"C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\App.js",[],"C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\components\\layout\\Footer.js",[],"C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\components\\Home.js",[],"C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\components\\product\\ProductDetails.js",[],"C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\components\\layout\\Header.js",[],"C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\components\\layout\\MetaData.js",[],"C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\components\\layout\\Loader.js",[],"C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\components\\product\\Product.js",[],"C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\components\\layout\\Search.js",[],"C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\components\\user\\Login.js",["102"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Loader from '../layout/Loader'\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login, clearErrors } from '../../actions/userActions'\r\n\r\nconst Login = ({ history, location }) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n\r\n        if (isAuthenticated) {\r\n            history.push(redirect)\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n    }, [dispatch, alert, isAuthenticated, error, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <MetaData title={'Login'} />\r\n\r\n                    <div className=\"row wrapper\">\r\n                        <div className=\"col-10 col-lg-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                                <h1 className=\"mb-3\">Login</h1>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email_field\">Email</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        id=\"email_field\"\r\n                                        className=\"form-control\"\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password_field\">Password</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        id=\"password_field\"\r\n                                        className=\"form-control\"\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <Link to=\"/password/forgot\" className=\"float-right mb-4\">Forgot Password?</Link>\r\n\r\n                                <button\r\n                                    id=\"login_button\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-block py-3\"\r\n                                >\r\n                                    LOGIN\r\n                                </button>\r\n\r\n                                <Link to=\"/register\" className=\"float-right mt-3\">New User?</Link>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Login","C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\components\\user\\Register.js",["103"],"import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { register, clearErrors } from '../../actions/userActions'\r\n\r\nconst Register = ({ history }) => {\r\n\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n    })\r\n\r\n    const { name, email, password } = user;\r\n\r\n    const [avatar, setAvatar] = useState('')\r\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n\r\n        if (isAuthenticated) {\r\n            history.push('/')\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n    }, [dispatch, alert, isAuthenticated, error, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('password', password);\r\n        formData.set('avatar', avatar);\r\n\r\n        dispatch(register(formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n        if (e.target.name === 'avatar') {\r\n\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if (reader.readyState === 2) {\r\n                    setAvatarPreview(reader.result)\r\n                    setAvatar(reader.result)\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(e.target.files[0])\r\n\r\n        } else {\r\n            setUser({ ...user, [e.target.name]: e.target.value })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <MetaData title={'Register User'} />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                        <h1 className=\"mb-3\">Register</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Name</label>\r\n                            <input\r\n                                type=\"name\"\r\n                                id=\"name_field\"\r\n                                className=\"form-control\"\r\n                                name='name'\r\n                                value={name}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email_field\"\r\n                                className=\"form-control\"\r\n                                name='email'\r\n                                value={email}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password_field\">Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"password_field\"\r\n                                className=\"form-control\"\r\n                                name='password'\r\n                                value={password}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n\r\n                        {/* <div className='form-group'>\r\n                            <label htmlFor='avatar_upload'>Avatar</label>\r\n                            <div className='d-flex align-items-center'>\r\n                                <div>\r\n                                    <figure className='avatar mr-3 item-rtl'>\r\n                                        <img\r\n                                            src={avatarPreview}\r\n                                            className='rounded-circle'\r\n                                            alt='Avatar Preview'\r\n                                        />\r\n                                    </figure>\r\n                                </div>\r\n                                <div className='custom-file'>\r\n                                    <input\r\n                                        type='file'\r\n                                        name='avatar'\r\n                                        className='custom-file-input'\r\n                                        id='customFile'\r\n                                        accept=\"iamges/*\"\r\n                                        onChange={onChange}\r\n                                    />\r\n                                    <label className='custom-file-label' htmlFor='customFile'>\r\n                                        Choose Avatar\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div> */}\r\n\r\n                        <button\r\n                            id=\"register_button\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\"\r\n                            disabled={loading ? true : false}\r\n                        >\r\n                            REGISTER\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Register","C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\components\\user\\Profile.js",["104"],"import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\n\r\nconst Profile = () => {\r\n\r\n    const { user, loading } = useSelector(state => state.auth)\r\n\r\n    return (\r\n      <div>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <>\r\n            <MetaData title={\"Your Profile\"} />\r\n            <h2 class=\"mt-5 ml-5\">My Profile</h2>\r\n            <div class=\"row justify-content-around mt-5 user-info\">\r\n              <div class=\"col-12 col-md-3\">\r\n                <figure class=\"avatar avatar-profile\">\r\n                  <img class=\"rounded-circle img-fluid\" src={user.avatar ? '' : 'images/default_avatar.jpg'} alt=\"user avatar profile picture\" />\r\n                </figure>\r\n                <Link\r\n                  to=\"/me/update\"\r\n                  id=\"edit_profile\"\r\n                  class=\"btn btn-primary btn-block my-5\"\r\n                >\r\n                  Edit Profile\r\n                </Link>\r\n              </div>\r\n\r\n              <div class=\"col-12 col-md-5\">\r\n                <h4>Full Name</h4>\r\n                <p>{user.name}</p>\r\n\r\n                <h4>Email Address</h4>\r\n                <p>{user.email}</p>\r\n\r\n                <h4>Joined On</h4>\r\n                <p>{String(user.createdAt).substring(0, 10)}</p>\r\n                {user.role !== 'admin' &&(\r\n\r\n                <Link to=\"/orders/me\" class=\"btn btn-danger btn-block mt-5\">\r\n                  My Orders\r\n                </Link>\r\n                )}\r\n\r\n                <Link to=\"/password/update\" class=\"btn btn-primary btn-block mt-3\">\r\n                  Change Password\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Profile\r\n","C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\components\\route\\ProtectedRoute.js",["105"],"import React from 'react'\r\nimport { Route, Redirect} from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst ProtectedRoute = ({component: Component, ...rest}) => {\r\n\r\n    const { isAuthenticated, loading, user} = useSelector(state => state.auth)\r\n    return (\r\n        <>\r\n            {loading === false && (\r\n                <Route\r\n                {...rest}\r\n                render={props => {\r\n                    if(isAuthenticated === false) {\r\n                        return <Redirect to='/login'/>\r\n                    }\r\n                    return <Component {...props}/>\r\n                }}\r\n                />\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute\r\n","C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\components\\user\\UpdateProfile.js",["106"],"import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateProfile, loadUser, clearErrors } from '../../actions/userActions'\r\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants'\r\n\r\nconst UpdateProfile = ({ history }) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [avatar, setAvatar] = useState('')\r\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user } = useSelector(state => state.auth);\r\n    const { error, isUpdated, loading } = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n\r\n        if (user) {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setAvatarPreview('/images/default_avatar.jpg')\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (isUpdated) {\r\n            alert.success('User updated successfully')\r\n            dispatch(loadUser());\r\n\r\n            history.push('/me')\r\n\r\n            dispatch({\r\n                type: UPDATE_PROFILE_RESET\r\n            })\r\n        }\r\n\r\n    }, [dispatch, alert, error, history, isUpdated])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('avatar', avatar);\r\n\r\n        dispatch(updateProfile(formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setAvatarPreview(reader.result)\r\n                setAvatar(reader.result)\r\n            }\r\n        }\r\n\r\n        reader.readAsDataURL(e.target.files[0])\r\n\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Profile'} />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                        <h1 className=\"mt-2 mb-5\">Update Profile</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Name</label>\r\n                            <input\r\n                                type=\"name\"\r\n                                id=\"name_field\"\r\n                                className=\"form-control\"\r\n                                name='name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email_field\"\r\n                                className=\"form-control\"\r\n                                name='email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <label htmlFor='avatar_upload'>Avatar</label>\r\n                            <div className='d-flex align-items-center'>\r\n                                <div>\r\n                                    <figure className='avatar mr-3 item-rtl'>\r\n                                        <img\r\n                                            src={avatarPreview}\r\n                                            className='rounded-circle'\r\n                                            alt='Avatar Preview'\r\n                                        />\r\n                                    </figure>\r\n                                </div>\r\n                                <div className='custom-file'>\r\n                                    <input\r\n                                        type='file'\r\n                                        name='avatar'\r\n                                        className='custom-file-input'\r\n                                        id='customFile'\r\n                                        accept='image/*'\r\n                                        onChange={onChange}\r\n                                    />\r\n                                    <label className='custom-file-label' htmlFor='customFile'>\r\n                                        Choose Avatar\r\n                                </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Update</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateProfile","C:\\Users\\Danpinon\\Documents\\IronHack\\web-dev\\module-03\\e-commerce\\frontend\\src\\components\\user\\UpdatePassword.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":34,"column":8,"nodeType":"113","endLine":34,"endColumn":58,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":20,"column":12,"nodeType":"117","messageId":"118","endLine":20,"endColumn":25},{"ruleId":"119","severity":1,"message":"120","line":23,"column":19,"nodeType":"121","endLine":23,"endColumn":146},{"ruleId":"115","severity":1,"message":"122","line":7,"column":39,"nodeType":"117","messageId":"118","endLine":7,"endColumn":43},{"ruleId":"111","severity":1,"message":"123","line":47,"column":8,"nodeType":"113","endLine":47,"endColumn":52,"suggestions":"124"},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.","ArrayExpression",["127"],"no-unused-vars","'avatarPreview' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["128"],"no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},"Update the dependencies array to be: [dispatch, alert, isAuthenticated, error, history, redirect]",{"range":"133","text":"134"},"Update the dependencies array to be: [dispatch, alert, error, history, isUpdated, user]",{"range":"135","text":"136"},[947,997],"[dispatch, alert, isAuthenticated, error, history, redirect]",[1378,1422],"[dispatch, alert, error, history, isUpdated, user]"]